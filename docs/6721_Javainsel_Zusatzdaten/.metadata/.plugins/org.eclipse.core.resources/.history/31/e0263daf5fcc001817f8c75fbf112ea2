package com.tutego.insel.solutions.thread;

import java.io.File;
import java.util.function.Consumer;

public class DateiBeobachter implements Runnable {
  private final File file;
  private Consumer<File> callback;

  public DateiBeobachter( String filename, Consumer<File> callback ) {
    this.callback = callback;
    file = new File( filename );
    new Thread( this ).start();
  }

  @Override
  public void run() {
    long oldLastModified = file.lastModified();

    while ( true ) {
      try {
        Thread.sleep( 500 );
      }
      catch ( InterruptedException e ) {
        throw new RuntimeException( e );
      }

      long lastModified = file.lastModified();
      if ( oldLastModified != lastModified ) {
        callback.accept( file );
        oldLastModified = lastModified;
      }
    }
  }

  public static void main( String[] args ) {
    Consumer<File> callback = f -> System.out.println( "Datei verändert " + f );
    new FileChangeWatcher( "c:/datei.txt", callback );
  }
}
